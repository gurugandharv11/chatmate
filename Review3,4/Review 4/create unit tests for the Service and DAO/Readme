This project demonstrates the implementation of unit tests for the Service and DAO layers of a Java-based application. The goal is to ensure the correctness of business logic and database interactions by isolating each layer and testing their behavior independently. JUnit and Mockito are used for creating the unit tests and mocking dependencies.

Features:
DAO Layer Unit Tests:

UserDAO: Tests for saving and retrieving user data from the database.
MessageDAO: Tests for storing and retrieving chat messages.
Mocking of database connections and prepared statements using Mockito for isolated tests without an actual database.
Service Layer Unit Tests:

UserService: Tests business logic for user registration, login, and validation.
ChatService: Tests message handling, including sending and displaying messages.
Mocking of DAO calls to test the service layer independently of database operations.
Mockito Usage:

Mocking database operations in the DAO layer to simulate database behavior and ensure the service logic is tested without dependencies.
Stubbing methods to return predefined values, ensuring the unit tests are deterministic.
JUnit Framework:

Used to define test cases, assertions, and test execution.
